require_relative '../minitest_helper'
require_relative 'test_display_string'

module ResponsiveConsole
  class TestLongHash < Minitest::Test
    include TestDisplayString

    def setup
      self.hash_format = :test_long
      super
    end

    def test_nested_arrays
      assert_equal(subject_output(hash_elements), <<~TEXT.strip)
        [ {
            A~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "B~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            C~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "D~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          },
          {
            E~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "F~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "H~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          },
          {
            I~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "L~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          } ]
      TEXT
    end

    def test_hashes_with_hash_values
      assert_equal(subject_output(hash_values), <<~TEXT.strip)
        {
          C~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  {
            A~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "B~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            C~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "D~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          },
          G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  {
            E~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "F~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "H~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          },
          K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  {
            I~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "L~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          }
        }
      TEXT
    end

    def test_hashes_with_hash_keys
      assert_equal(subject_output(hash_keys), <<~TEXT.strip)
        {
          {
            A~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "B~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            C~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "D~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          }:  "C~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
          {
            E~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "F~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "H~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          }:  "G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
          {
            I~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  "L~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
          }:  "K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        }
      TEXT
    end

    def test_hashes_with_array_values
      assert_equal(subject_output(array_values), <<~TEXT.strip)
        {
          A~~~~~~~~~~~~~~~~~~~~~~~~~~~:  [ "B~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                           "C~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                           "D~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" ],
          E~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  [ "F~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                               "G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                               "H~~~~~~~~~~~~~~~~~~~~~~~~~~~" ],
          I~~~~~~~~~~~~~~~~~~~~~~~~~~~~:  [ "J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                            "K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
                                            "L~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" ]
        }
      TEXT
    end

    def test_hashes_with_array_keys
      assert_equal(subject_output(array_keys), <<~TEXT.strip)
        {
          [ "B~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "C~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            "D~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" ]:  "A~~~~~~~~~~~~~~~~~~~~~~~~~~~",
          [ "F~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            "H~~~~~~~~~~~~~~~~~~~~~~~~~~~" ]:  "E~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
          [ "J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
            "L~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" ]:  "I~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        }
      TEXT
    end
  end
end
